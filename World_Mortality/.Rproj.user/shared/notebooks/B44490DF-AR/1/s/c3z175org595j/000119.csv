"0","predict2 <- function(data){"
"0","#ordering data"
"0","  if(data$time_unit[1] == ""weekly""){"
"0","    data$year_plus_time_unit <- data$year + (data$time / 52)"
"0","  }"
"0","  else "
"0","    data$year_plus_time_unit <- data$year + (data$time / 52)"
"0","  "
"0","#extract data from 2015-2019 (pre-2020) (weeks < 53)"
"0","  pre <- (data[,3] >= 2015) & (data[,3] < 2020) & (data[,4] < 53)"
"0","  m <- max(data[pre, 4]) #12 or 52, depending on weekly or monthly measures"
"0","#one-hot encoding for weeks or months"
"0","  onehot <- matrix(0, sum(pre), m)"
"0","  for (i in 1:sum(pre)) {"
"0","    onehot[i, data[pre,4][i]] <- 1"
"0","  }"
"0",""
"0","  predictors_df <- data.frame(year = data[pre, 3], onehot)"
"0","  predictors_df$Response <- data[pre, 6] #number of deaths per time unit"
"0",""
"0","#fit gls with AR(1)"
"0","  model <- nlme::gls(Response ~ 0 + ., data = predictors_df, correlation=corAR1(form= ~1))"
"0","  summary(model)"
"0","  intervals(model)"
"0",""
"0","# ################################################################################  "
"0","#   #plot actual values"
"0","#   predictions <- stats::predict(model)"
"0","#   plot(data[pre,7], data[pre, 6], type = ""l"", col = ""blue"", lwd = 2,"
"0","#      xlab = ""Time"", ylab = ""Values"","
"0","#      main = ""Actual vs. Predicted Over Time"")"
"0","# "
"0","# #add predictions"
"0","#   lines(data[pre,7], predictions, col = ""red"", lwd = 2, lty = 2)"
"0","#   legend(""topright"", legend = c(""Actual"", ""Predicted""),"
"0","#        col = c(""blue"", ""red""), lty = c(1, 2), lwd = 2)"
"0","# ################################################################################  "
"0","  "
"0","  predictors2020 <- cbind(rep(2020, m), diag(m))"
"0","  colnames(predictors2020) <- c('year', paste0('X', 1:m))"
"0","#predict baseline values for 2020 using the regression model"
"0","  baseline <- stats::predict(model, newdata = as.data.frame(predictors2020))"
"0","  if(max(data[,4]==53)){ #baseline week 53 is baseline week 52"
"0","    baseline <- c(baseline, tail(baseline, 1)) "
"0","  }"
"0","  time2020 <- (data[,3]==2020)"
"0",""
"0","  total_time <- ((data[,3] >= 2015) & (data[,3] <= 2016) & (data[,4] < 53)) | ((data[,3]>2016) & (data[,3]<=2020))"
"0","  total_prediction <- c(predictions, baseline)"
"0","  "
"0","#calculating and plotting difference in actual number of deaths and predicted"
"0","  ind2020 <- (data[,3]==2020)"
"0","  ind2021 <- (data[,3]==2021)"
"0","  diff2020 <- data[ind2020, 6] - baseline[data[ind2020, 4]]"
"0","  diff2021 <- data[ind2021, 6] - baseline[data[ind2021, 4]]"
"0","  plot(diff2020, type='l', xlab='Week', ylab='Excess deaths')"
"0","  title('Excess 2020')"
"0","  plot(diff2021, type='l', xlab='Week', ylab='Excess deaths')"
"0","  title('Excess 2021')"
"0","  "
"0","  excess_begin = begin(data)"
"0","#calculating excess mortality as defined in article"
"0","  print(diff2021)"
"0","  total_diff <- sum(diff2020[excess_begin:length(diff2020)])+ sum(diff2021[1:24]) "
"0","  if(data[1,2]=='Netherlands' || data[1,2]=='Belgium'|| data[1,2]=='Luxembourg' || data[1,2]=='Germany'){"
"0","    total_diff <- total_diff - diff2020[32] - diff2020[33] - diff2020[34] #heat wave in Europe"
"0","  }"
"0","  return(total_diff)"
"0","}"
